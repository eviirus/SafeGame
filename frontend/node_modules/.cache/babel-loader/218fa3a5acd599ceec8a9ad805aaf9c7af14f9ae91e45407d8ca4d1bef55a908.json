{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\IT\\\\Desktop\\\\ALL\\\\Learn\\\\fullstack\\\\client\\\\src\\\\components\\\\StudentForm.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst StudentForm = ({\n  classId,\n  className,\n  setRefresh\n}) => {\n  _s();\n  const [studentFullName, setStudentFullName] = useState(\"\");\n  const [grades, setGrades] = useState(\"\");\n  const [error, setError] = useState(\"\");\n  const handleSubmit = async e => {\n    e.preventDefault();\n    if (!studentFullName || !grades) {\n      setError(\"Both Name and Grades are required.\");\n      return;\n    }\n    const gradesArray = grades.split(\",\").map(grade => parseInt(grade.trim(), 10)).filter(grade => !isNaN(grade));\n    if (gradesArray.length === 0) {\n      setError(\"Please provide valid grades.\");\n      return;\n    }\n    try {\n      const payload = {\n        className,\n        studentFullName,\n        grades: gradesArray,\n        classId\n      };\n      console.log(\"Payload being sent:\", payload); // Debugging line\n\n      // Using fetch instead of axios\n      const response = await fetch(\"http://localhost:5000/students\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify(payload) // Convert payload to JSON string\n      });\n      if (!response.ok) {\n        throw new Error(\"Error adding student.\");\n      }\n      const data = await response.json();\n      console.log(\"Student added:\", data);\n      setStudentFullName(\"\");\n      setGrades(\"\");\n      setError(\"\");\n    } catch (err) {\n      setError(\"Error adding student.\");\n      console.error(err);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: handleSubmit,\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"Add Student\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n      style: {\n        color: \"red\"\n      },\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      placeholder: \"Name and surname\",\n      value: studentFullName,\n      onChange: e => setStudentFullName(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      placeholder: \"Grades (comma-separated)\",\n      value: grades,\n      onChange: e => setGrades(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"submit\",\n      children: \"Add\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 61,\n    columnNumber: 5\n  }, this);\n};\n_s(StudentForm, \"UWREVSf2cwg5uZTN5PxOJk25g0E=\");\n_c = StudentForm;\nexport default StudentForm;\nvar _c;\n$RefreshReg$(_c, \"StudentForm\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","StudentForm","classId","className","setRefresh","_s","studentFullName","setStudentFullName","grades","setGrades","error","setError","handleSubmit","e","preventDefault","gradesArray","split","map","grade","parseInt","trim","filter","isNaN","length","payload","console","log","response","fetch","method","headers","body","JSON","stringify","ok","Error","data","json","err","onSubmit","children","fileName","_jsxFileName","lineNumber","columnNumber","style","color","placeholder","value","onChange","target","type","_c","$RefreshReg$"],"sources":["C:/Users/IT/Desktop/ALL/Learn/fullstack/client/src/components/StudentForm.jsx"],"sourcesContent":["import React, { useState } from \"react\";\r\n\r\nconst StudentForm = ({ classId, className, setRefresh }) => {\r\n  const [studentFullName, setStudentFullName] = useState(\"\");\r\n  const [grades, setGrades] = useState(\"\");\r\n  const [error, setError] = useState(\"\");\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n\r\n    if (!studentFullName || !grades) {\r\n      setError(\"Both Name and Grades are required.\");\r\n      return;\r\n    }\r\n\r\n    const gradesArray = grades\r\n      .split(\",\")\r\n      .map((grade) => parseInt(grade.trim(), 10))\r\n      .filter((grade) => !isNaN(grade));\r\n\r\n    if (gradesArray.length === 0) {\r\n      setError(\"Please provide valid grades.\");\r\n      return;\r\n    }\r\n\r\n    try {\r\n      const payload = {\r\n        className,\r\n        studentFullName,\r\n        grades: gradesArray,\r\n        classId,\r\n      };\r\n      console.log(\"Payload being sent:\", payload); // Debugging line\r\n\r\n      // Using fetch instead of axios\r\n      const response = await fetch(\"http://localhost:5000/students\", {\r\n        method: \"POST\",\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n        },\r\n        body: JSON.stringify(payload), // Convert payload to JSON string\r\n      });\r\n\r\n      if (!response.ok) {\r\n        throw new Error(\"Error adding student.\");\r\n      }\r\n\r\n      const data = await response.json();\r\n      console.log(\"Student added:\", data);\r\n\r\n      setStudentFullName(\"\");\r\n      setGrades(\"\");\r\n      setError(\"\");\r\n    } catch (err) {\r\n      setError(\"Error adding student.\");\r\n      console.error(err);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <form onSubmit={handleSubmit}>\r\n      <h3>Add Student</h3>\r\n      {error && <p style={{ color: \"red\" }}>{error}</p>}\r\n      <input\r\n        placeholder=\"Name and surname\"\r\n        value={studentFullName}\r\n        onChange={(e) => setStudentFullName(e.target.value)}\r\n      />\r\n      <input\r\n        placeholder=\"Grades (comma-separated)\"\r\n        value={grades}\r\n        onChange={(e) => setGrades(e.target.value)}\r\n      />\r\n      <button type=\"submit\">Add</button>\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default StudentForm;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}