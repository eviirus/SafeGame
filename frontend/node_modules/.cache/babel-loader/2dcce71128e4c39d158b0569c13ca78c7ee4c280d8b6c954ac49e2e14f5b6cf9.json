{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\IT\\\\Desktop\\\\ALL\\\\Learn\\\\fullstack\\\\client\\\\src\\\\components\\\\StudentForm.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst StudentForm = ({\n  classId,\n  className,\n  setRefresh\n}) => {\n  _s();\n  const [studentFullName, setStudentFullName] = useState(\"\");\n  const [grades, setGrades] = useState(\"\");\n  const [error, setError] = useState(\"\");\n  const handleSubmit = async e => {\n    e.preventDefault();\n    if (!studentFullName || !grades) {\n      setError(\"Both Name and Grades are required.\");\n      return;\n    }\n    const gradesArray = grades.split(\",\").map(grade => parseInt(grade.trim(), 10)).filter(grade => !isNaN(grade));\n    if (gradesArray.length === 0) {\n      setError(\"Please provide valid grades.\");\n      return;\n    }\n    try {\n      console.log({\n        className,\n        studentFullName,\n        grades: gradesArray\n      }); // Debugging line\n      await axios.post(\"http://localhost:5000/students\", {\n        className: className,\n        studentFullName,\n        grades: gradesArray,\n        classId\n      });\n      setRefresh(prev => !prev);\n      setStudentFullName(\"\");\n      setGrades(\"\");\n      setError(\"\");\n    } catch (err) {\n      setError(\"Error adding student.\");\n      console.error(err);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: handleSubmit,\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"Add Student\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n      style: {\n        color: \"red\"\n      },\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      placeholder: \"Name and surname\",\n      value: studentFullName,\n      onChange: e => setStudentFullName(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      placeholder: \"Grades (comma-separated)\",\n      value: grades,\n      onChange: e => setGrades(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"submit\",\n      children: \"Add\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 47,\n    columnNumber: 5\n  }, this);\n};\n_s(StudentForm, \"UWREVSf2cwg5uZTN5PxOJk25g0E=\");\n_c = StudentForm;\nexport default StudentForm;\nvar _c;\n$RefreshReg$(_c, \"StudentForm\");","map":{"version":3,"names":["React","useState","axios","jsxDEV","_jsxDEV","StudentForm","classId","className","setRefresh","_s","studentFullName","setStudentFullName","grades","setGrades","error","setError","handleSubmit","e","preventDefault","gradesArray","split","map","grade","parseInt","trim","filter","isNaN","length","console","log","post","prev","err","onSubmit","children","fileName","_jsxFileName","lineNumber","columnNumber","style","color","placeholder","value","onChange","target","type","_c","$RefreshReg$"],"sources":["C:/Users/IT/Desktop/ALL/Learn/fullstack/client/src/components/StudentForm.jsx"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport axios from \"axios\";\r\n\r\nconst StudentForm = ({ classId, className, setRefresh }) => {\r\n  const [studentFullName, setStudentFullName] = useState(\"\");\r\n  const [grades, setGrades] = useState(\"\");\r\n  const [error, setError] = useState(\"\");\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n\r\n    if (!studentFullName || !grades) {\r\n      setError(\"Both Name and Grades are required.\");\r\n      return;\r\n    }\r\n\r\n    const gradesArray = grades\r\n      .split(\",\")\r\n      .map((grade) => parseInt(grade.trim(), 10))\r\n      .filter((grade) => !isNaN(grade));\r\n\r\n    if (gradesArray.length === 0) {\r\n      setError(\"Please provide valid grades.\");\r\n      return;\r\n    }\r\n\r\n    try {\r\n      console.log({ className, studentFullName, grades: gradesArray }); // Debugging line\r\n      await axios.post(\"http://localhost:5000/students\", {\r\n        className: className,\r\n        studentFullName,\r\n        grades: gradesArray,\r\n        classId,\r\n      });\r\n\r\n      setRefresh((prev) => !prev);\r\n      setStudentFullName(\"\");\r\n      setGrades(\"\");\r\n      setError(\"\");\r\n    } catch (err) {\r\n      setError(\"Error adding student.\");\r\n      console.error(err);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <form onSubmit={handleSubmit}>\r\n      <h3>Add Student</h3>\r\n      {error && <p style={{ color: \"red\" }}>{error}</p>}\r\n      <input\r\n        placeholder=\"Name and surname\"\r\n        value={studentFullName}\r\n        onChange={(e) => setStudentFullName(e.target.value)}\r\n      />\r\n      <input\r\n        placeholder=\"Grades (comma-separated)\"\r\n        value={grades}\r\n        onChange={(e) => setGrades(e.target.value)}\r\n      />\r\n      <button type=\"submit\">Add</button>\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default StudentForm;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}